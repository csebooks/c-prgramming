---
title: 'Decision Control Instruction'
weight: 2
references:

    links:
        - https://www.w3schools.com/c/
        - https://www.programiz.com/c-programming
    books:
        - b1:
            title: Let Us C By Kanetkar Yashavant 
            url: https://www.google.co.in/books/edition/Let_Us_C/HrlIEAAAQBAJ?hl=en&gbpv=1
---

<div class="slides">
   
   <section data-auto-animate="" data-transition="zoom">
    <h2>Welcome to C Programming</h2>
    <p>Understanding decision control instructions in C</p>
  </section>

  
  <section data-auto-animate="" data-transition="zoom">
    <h2>Contents</h2>
    <ul>
      <li>We all need to alter our actions in the face of changing circumstances.</li>
      <li>C language and decision control instructions.</li>
    </ul>
  </section>

  
  <section data-auto-animate="" data-transition="zoom">
    <h2>The if - else Statement</h2>
    <p>C uses the keywords if and else to implement the decision control instruction.</p>
    <pre>
      if (condition)
        statement1;
      else
        statement2;
    </pre>
  </section>

  
  <section data-auto-animate="" data-transition="zoom">
    <h2>Relational Operators</h2>
    <ul>
      <li>x == y: x is equal to y</li>
      <li>x != y: x is not equal to y</li>
      <li>x < y: x is less than y</li>
      <li>x > y: x is greater than y</li>
      <li>x <= y: x is less than or equal to y</li>
      <li>x >= y: x is greater than or equal to y</li>
    </ul>
  </section>

  
  <section data-auto-animate="" data-transition="zoom">
    <h2>Example 3.1: Discount Calculation</h2>
    <p>While purchasing certain items, a discount of 10% is offered if the quantity purchased is more than 1000.</p>
    <p>Here is a program that implements this logic:</p>
    <pre>
      #include&lt;stdio.h&gt;
      int main()
      {
        int qty, dis;
        float rate, tot;
        printf("Enter quantity and rate");
        scanf("%d %f", &qty, &rate);
        if (qty > 1000)
          dis = 10;
        else
          dis = 0;
        tot = (qty * rate) - (qty * rate * dis / 100);
        printf("Total expenses = Rs. %f\n", tot);
        return 0;
      }
    </pre>
  </section>

  
  <section data-auto-animate="" data-transition="zoom">
    <h2>Example 3.1: Discount Calculation (Cont.)</h2>
    <p>Here is some sample interaction with the program.</p>
    <pre>
      Enter quantity and rate: 1200 15.50
      Total expenses = Rs. 16740.000000
      
      Enter quantity and rate: 200 15.50
      Total expenses = Rs. 3100.000000
    </pre>
  </section>

  
  <section data-auto-animate="" data-transition="zoom">
    <h2>Example 3.2: Employee Salary Calculation</h2>
    <p>In a company, an employee is paid as under:</p>
    <p>Here is a program that calculates the gross salary:</p>
    <pre>
      #include&lt;stdio.h&gt;
      int main()
      {
        float bs, gs, da, hra;
        printf("Enter basic salary");
        scanf("%f", &bs);
        if (bs < 1500)
        {
          hra = bs * 10 / 100;
          da = bs * 90 / 100;
        }
        else
        {
          hra = 500;
          da = bs * 98 / 100;
        }
        gs = bs + hra + da;
        printf("Gross salary = Rs. %f\n", gs);
        return 0;
      }
    </pre>
  </section>

  
  <section data-auto-animate="" data-transition="zoom">
    <h2>Nested if-else</h2>
    <p>It is perfectly alright to nest if-else constructs within each other. This adds flexibility to your program.</p>
    <p>Here's an example:</p>
    <pre>
      if (i == 1)
        printf("You would go to heaven!\n");
      else
      {
        if (i == 2)
          printf("Hell was created with you in mind\n");
        else
          printf("How about mother earth!\n");
      }
    </pre>
  </section>

   
   <section data-auto-animate="" data-transition="zoom">
    <h2>A Word of Caution</h2>
    <h2>Common Mistakes in Using If Statements</h2>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Non-Zero vs. Zero Conditions</h2>
    <p>In C, a non-zero value is considered true, while 0 is considered false.</p>
    <p>Examples:</p>
    <code>if (3 + 2 % 5), printf("This works");</code>
    <code>if (a = 10), printf("Even this works");</code>
    <code>if (-5), printf("Surprisingly even this works");</code>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Non-Zero vs. Zero Conditions (Continued)</h2>
    <p>Explanation of previous examples.</p>
    <p>Emphasize that zero means false, non-zero means true.</p>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Semicolon After If Condition</h2>
    <p>Caution: Avoid placing a semicolon after an if condition.</p>
    <code>scanf("%d", &i);</code>
    <code>if (i == 5);</code>
    <code>printf("You entered 5");</code>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Semicolon After If Condition (Continued)</h2>
    <p>Explanation of the issue with using a semicolon after if condition.</p>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Problem 3.1: Calculate Profit or Loss</h2>
    <p>Program to determine profit or loss.</p>
    <p>Input: Cost price and selling price.</p>
    <p>Output: Profit amount or loss amount.</p>
    <p>Example program and output.</p>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Problem 3.2: Check Even or Odd</h2>
    <p>Program to check if an integer is even or odd.</p>
    <p>Input: Any integer.</p>
    <p>Output: "The number is even" or "The number is odd".</p>
    <p>Example program and output.</p>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Problem 3.3: Leap Year Check</h2>
    <p>Program to determine if a year is a leap year.</p>
    <p>Input: Any year.</p>
    <p>Output: "Leap year" or "Not a leap year".</p>
    <p>Example program and output.</p>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Exercises (A)</h2>
    <p>Five exercises (a to e) with C code snippets.</p>
    <p>Challenge to predict the output of each exercise.</p>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Exercises (B)</h2>
    <p>Five exercises (a to e) with C code snippets.</p>
    <p>Challenge to find and correct errors in each exercise.</p>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Exercises (C)</h2>
    <p>Five statements (a to f).</p>
    <p>True or False questions regarding C programming constructs.</p>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Exercises (D)</h2>
    <p>Matching pairs question based on C programming constructs.</p>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Exercises (E)</h2>
    <p>Determining which if statements are valid based on conditions and expressions.</p>
</section>


<section data-auto-animate="" data-transition="zoom">
    <h2>Exercises (F)</h2>
    <p>Instructions for the last set of exercises (a to i).</p>
    <p>Challenges to write C programs for various tasks.</p>
</section>

</div>
