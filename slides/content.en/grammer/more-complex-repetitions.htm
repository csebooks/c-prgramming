---
title: 'More Complex In repetitions'
weight: 5
---


<div class="slides">

  <!-- Slide 1: Introduction to Looping -->
  <section data-auto-animate data-transition="zoom">
    <h2>Introduction to Looping</h2>
    <p>Programs use sequential or decision control instructions.</p>
    <p>Sequential: Calculations occur in a fixed order.</p>
    <p>Decision: Instructions executed based on tested conditions.</p>
</section>

<!-- Slide 2: The For Loop -->
<section data-auto-animate data-transition="zoom">
    <h2>The For Loop</h2>
    <p>For loop: Initializes, tests, and increments a loop counter.</p>
    <p>General form: for ( initialize ; test ; increment ) { body }</p>
    <p>Example: Calculate simple interest using a for loop.</p>
</section>

<!-- Slide 3: Execution of For Loop -->
<section data-auto-animate data-transition="zoom">
    <h2>Execution of For Loop</h2>
    <p>Explain how a for loop works with the example.</p>
    <p>Initialization, testing, and incrementation.</p>
    <p>Continue loop until the test condition is false.</p>
</section>

<!-- Slide 4: Different Forms of For Loops -->
<section data-auto-animate data-transition="zoom">
    <h2>Different Forms of For Loops</h2>
    <p>Demonstrate various forms of for loops.</p>
    <p>Examples with different placements of initialization and incrementation.</p>
</section>

<!-- Slide 5: Nesting of Loops -->
<section data-auto-animate data-transition="zoom">
    <h2>Nesting of Loops</h2>
    <p>Show how to nest for loops.</p>
    <p>Explain the example of nested loops.</p>
</section>

<!-- Slide 6: Multiple Initializations in For Loop -->
<section data-auto-animate data-transition="zoom">
    <h2>Multiple Initializations in For Loop</h2>
    <p>Introduce multiple initializations in the for loop.</p>
    <p>Explain using examples with multiple statements.</p>
</section>

<!-- Slide 7: The Break Statement -->
<section data-auto-animate data-transition="zoom">
    <h2>The Break Statement</h2>
    <p>Describe the break statement to exit a loop.</p>
    <p>Show examples of breaking out of a loop.</p>
</section>

<!-- Slide 8: The Continue Statement -->
<section data-auto-animate data-transition="zoom">
    <h2>The Continue Statement</h2>
    <p>Explain the continue statement to skip loop iterations.</p>
    <p>Provide examples of using continue in loops.</p>
</section>

<!-- Slide 9: The Do-While Loop -->
<section data-auto-animate data-transition="zoom">
    <h2>The Do-While Loop</h2>
    <p>Introduce the do-while loop.</p>
    <p>Describe how it tests the condition after executing loop statements.</p>
    <p>Compare with the while loop.</p>
</section>

<!-- Slide 10: An Example of the Do-While Loop -->
<section data-auto-animate data-transition="zoom">
    <h2>An Example of the Do-While Loop</h2>
    <p>Present a practical example using the do-while loop.</p>
    <p>Explain why it ensures at least one execution.</p>
</section>

<!-- Slide 11: Odd Loops -->
<section data-auto-animate data-transition="zoom">
    <h2>Odd Loops</h2>
    <p>Discuss loops with an unknown number of iterations.</p>
    <p>Explain the need for fflush in this context.</p>
    <p>Offer alternative implementations using for and while loops.</p>
</section>

<!-- Slide 12: Summary -->
<section data-auto-animate data-transition="zoom">
    <h2>Summary</h2>
    <p>Recap key points:</p>
    <p>For loop structure.</p>
    <p>Break and continue usage.</p>
    <p>Differences between for, while, and do-while loops.</p>
</section>
</div>